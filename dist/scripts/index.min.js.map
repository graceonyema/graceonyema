{"version":3,"sources":["scripts/index.min.js"],"names":["pageTopBtn","document","getElementById","msgForms","querySelectorAll","toggleTopBtn","body","scrollTop","documentElement","classList","remove","add","displayStatus","result","formElem","statusBox","lastChild","text","textContent","toggle","setTimeout","forEach","form","addEventListener","async","event","preventDefault","formData","FormData","target","response","fetch","method","json","reset","window","onscroll","navigator","serviceWorker","register","then","console","log","catch","error"],"mappings":"AACA,MAAMA,WAAaC,SAASC,eAAe,aAErCC,SAAWF,SAASG,iBAAiB,UAQ3C,SAASC,eACHJ,SAASK,KAAKC,UAAY,IAAMN,SAASO,gBAAgBD,UAAY,GACvEP,WAAWS,UAAUC,OAAO,UAG5BV,WAAWS,UAAUE,IAAI,UAY7B,MAAMC,cAAgB,CAACC,EAAQC,KAC7B,MAAMC,EAAYD,EAASE,UAC3B,IAEIC,EAAkB,YAAXJ,EAFM,uDACA,oEAIjBE,EAAUG,YAAcD,EACxBF,EAAUN,UAAUU,OAAO,WAE3BC,WAAW,KACXL,EAAUN,UAAUU,OAAO,WAC3BJ,EAAUG,YAAc,IACrB,MAyBLf,SAASkB,QAAQC,IACfA,EAAKC,iBAAiB,SAAUC,MAAMC,IACpCA,EAAMC,iBAGN,IAAIC,EAAW,IAAIC,SAASH,EAAMI,QAG9BC,QAAiBC,MAJT,uFAIoB,CAC9BC,OAAQ,OACR1B,KAAMqB,KAKJd,OAAEA,SAAiBiB,EAASG,OAEhCrB,cAAcC,EAAQY,EAAMI,QAC5BP,EAAKY,YAKTC,OAAOC,SAAW,KAChB/B,gBAOEgC,UAAUC,eACZD,UAAUC,cAAcC,SAAS,WAChCC,KAAK,KACFC,QAAQC,IAAI,+BAEfC,MAAOC,IAENH,QAAQC,IAAI","file":"index.min.js","sourcesContent":["// const headerNav = document.getElementById(\"site-header\");\r\nconst pageTopBtn = document.getElementById(\"go-to-top\");\r\n// const msgForm = document.getElementById('contact-form');\r\nconst msgForms = document.querySelectorAll('.gform');\r\n// const statusBox = document.getElementById('status');\r\n\r\n\r\n/**\r\n * Toggle visibility of the 'go to top' button based on scroll position\r\n */\r\n\r\nfunction toggleTopBtn() {\r\n if (document.body.scrollTop > 70 || document.documentElement.scrollTop > 70) {\r\n pageTopBtn.classList.remove(\"d-none\");\r\n // headerNav.classList.add(\"header-transparent\");\r\n } else {\r\n pageTopBtn.classList.add(\"d-none\");\r\n // headerNav.classList.remove(\"header-transparent\");\r\n }\r\n}\r\n\r\n\r\n/**\r\n * Shows notification message on target(form) \r\n * @param {string} result - The status of a form's submission\r\n * @param {HTMLFormElement} formElem - The submitted form element\r\n */\r\n\r\nconst displayStatus = (result, formElem) => {\r\n const statusBox = formElem.lastChild;\r\n let txtSuccess = \"Thank you. You'll get a response as soon as possible\";\r\n let txtFailure = \"Unable to send message. Please Check network connection and retry\";\r\n let text = result === \"success\" ? txtSuccess : txtFailure;\r\n \r\n\r\n statusBox.textContent = text;\r\n statusBox.classList.toggle(\"fade-in\");\r\n\r\n setTimeout(() => {\r\n\t\tstatusBox.classList.toggle(\"fade-in\");\r\n\t\tstatusBox.textContent = \"\";\r\n }, 8000);\r\n}\r\n\r\n\r\n// msgForm.addEventListener('submit', sendMessage);\r\n\r\n// msgForm.onsubmit = async (event) => {\r\n// event.preventDefault();\r\n// const url = 'https://script.google.com/macros/s/AKfycbyleOTpKJfCQa5tNLaGLQVz-xTLTc0fWIJOKeZ4/exec'\r\n// let formData = new FormData(event.target);\r\n// // console.log(formData.get('name'), formData.get('email'), formData.get('message'));\r\n// // console.log(new FormData(event.target));\r\n// let response = await fetch(url, {\r\n// method: 'POST',\r\n// body: formData\r\n// });\r\n\r\n// // let {result, data} = await response.json();\r\n// // console.log(data);\r\n// let { result } = await response.json();\r\n \r\n// displayStatus(result);\r\n// msgForm.reset();\r\n// };\r\n\r\nmsgForms.forEach(form => {\r\n form.addEventListener('submit', async(event) => {\r\n event.preventDefault();\r\n\r\n const url = 'https://script.google.com/macros/s/AKfycbyleOTpKJfCQa5tNLaGLQVz-xTLTc0fWIJOKeZ4/exec';\r\n let formData = new FormData(event.target);\r\n // console.log(formData.get('name'), formData.get('email'), formData.get('message'));\r\n // console.log(new FormData(event.target));\r\n let response = await fetch(url, {\r\n method: 'POST',\r\n body: formData\r\n });\r\n\r\n // let {result, data} = await response.json();\r\n // console.log(data);\r\n let { result } = await response.json();\r\n \r\n displayStatus(result, event.target);\r\n form.reset();\r\n })\r\n});\r\n\r\n\r\nwindow.onscroll = () => {\r\n toggleTopBtn()\r\n};\r\n\r\n/**\r\n * Register Service Worker\r\n */\r\n\r\nif (navigator.serviceWorker) {\r\n navigator.serviceWorker.register('./sw.js')\r\n .then(() => {\r\n console.log('Service Worker registered')\r\n })\r\n .catch((error) => {\r\n // console.log('Registration Failed', error);\r\n console.log('Registration Failed');\r\n });\r\n}"]}